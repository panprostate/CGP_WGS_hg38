//read config file
def config = new ConfigSlurper().parse(new File('cgp_staging.prm').toURL())
props = config.toProperties()

LSF_Q=props.LSF_Q
LSF_MEMORY=props.LSF_MEMORY
LSF_ARRAY_START=props.LSF_ARRAY_START
LSF_ARRAY_END=props.LSF_ARRAY_END
LSF_JOB_NAME=props.LSF_JOB_NAME
THREADS=props.THREADS

ID_ANALYSIS_PROC=props.ID_ANALYSIS_PROC

LSF_Q_STAGE=props.LSF_Q_STAGE
LSF_MEMORY_STAGE=props.LSF_MEMORY_STAGE
LSF_ARRAY_START_STAGE=props.LSF_ARRAY_START_STAGE
LSF_ARRAY_END_STAGE=props.LSF_ARRAY_END_STAGE
LSF_THREADS_STAGE=props.LSF_THREADS_STAGE
LSF_PRIORITY_STAGE =props.LSF_PRIORITY_STAGE
LSF_NFS_TOKEN=props.LSF_NFS_TOKEN

//LSF_JOB_NAME=LSF_JOB_NAME+"_"+ID_ANALYSIS_PROC

def JOBID = System.getenv('LSB_JOBID');

executor="lsf"

procs="$THREADS"

lsf_request_options="  -P analysis-cgp -sp $LSF_PRIORITY_STAGE -q $LSF_Q -R'select[casm_cgpirods>=$LSF_NFS_TOKEN && mem>$LSF_MEMORY] order[!slots] span[hosts=1] rusage[casm_cgpirods=$LSF_NFS_TOKEN]'  -R'rusage[mem=$LSF_MEMORY]' -M$LSF_MEMORY -oo ${LSF_JOB_NAME}_.%I.canPipe.log -J ${LSF_JOB_NAME}_default_${JOBID}'[$LSF_ARRAY_START-$LSF_ARRAY_END]'"
commands {

	lsf_STAGE {
		procs="$LSF_THREADS_STAGE"
		lsf_request_options="  -P analysis-cgp -sp $LSF_PRIORITY_STAGE -q $LSF_Q_STAGE -R'select[casm_cgpirods>=$LSF_NFS_TOKEN && mem>$LSF_MEMORY_STAGE] order[!slots] span[hosts=1] rusage[casm_cgpirods=$LSF_NFS_TOKEN]' -R'rusage[mem=$LSF_MEMORY_STAGE]' -M$LSF_MEMORY_STAGE -oo ${LSF_JOB_NAME}_STAGE.%I.canPipe.log -J ${LSF_JOB_NAME}_STAGE_${JOBID}'[$LSF_ARRAY_START_STAGE-$LSF_ARRAY_END_STAGE]'"
	}
}
