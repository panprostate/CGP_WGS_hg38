//read config file
def config = new ConfigSlurper().parse(new File('cgp_battenberg.prm').toURL())
props = config.toProperties()

//get number of chromosomes for LSF job index
REFERENCE=props.REFERENCE
EXCLUDE_CONTIGS_FILE=props.IGNORE_CONTIG_FILE
CONTIGS="grep -vFwcf ${EXCLUDE_CONTIGS_FILE} ${REFERENCE}.fai".execute().text.toInteger()

LSF_Q=props.LSF_Q
LSF_MEMORY=props.LSF_MEMORY
LSF_ARRAY_START=props.LSF_ARRAY_START
LSF_ARRAY_END=props.LSF_ARRAY_END

LSF_JOB_NAME=props.LSF_JOB_NAME
THREADS=props.THREADS

LSF_Q_TOUCH=props.LSF_Q_TOUCH
LSF_MEMORY_TOUCH=props.LSF_MEMORY_TOUCH
LSF_ARRAY_START_TOUCH=props.LSF_ARRAY_START_TOUCH
LSF_ARRAY_END_TOUCH=props.LSF_ARRAY_END_TOUCH
LSF_THREADS_TOUCH=props.LSF_THREADS_TOUCH

LSF_Q_SPLITLOCIFILES=props.LSF_Q_SPLITLOCIFILES
LSF_MEMORY_SPLITLOCIFILES=props.LSF_MEMORY_SPLITLOCIFILES
LSF_ARRAY_START_SPLITLOCIFILES=props.LSF_ARRAY_START_SPLITLOCIFILES
LSF_ARRAY_END_SPLITLOCIFILES=props.LSF_ARRAY_END_SPLITLOCIFILES
LSF_THREADS_SPLITLOCIFILES=props.LSF_THREADS_SPLITLOCIFILES

LSF_Q_ALLELECOUNT=props.LSF_Q_ALLELECOUNT
LSF_MEMORY_ALLELECOUNT=props.LSF_MEMORY_ALLELECOUNT
LSF_ARRAY_START_ALLELECOUNT=props.LSF_ARRAY_START_ALLELECOUNT
LSF_ARRAY_END_ALLELECOUNT=props.LSF_ARRAY_END_ALLELECOUNT
LSF_THREADS_ALLELECOUNT=props.LSF_THREADS_ALLELECOUNT

LSF_Q_CONCATALLELECOUNT_BAFLOG_GCCORR=props.LSF_Q_CONCATALLELECOUNT_BAFLOG_GCCORR
LSF_MEMORY_CONCATALLELECOUNT_BAFLOG_GCCORR=props.LSF_MEMORY_CONCATALLELECOUNT_BAFLOG_GCCORR
LSF_ARRAY_START_CONCATALLELECOUNT_BAFLOG_GCCORR=props.LSF_ARRAY_START_CONCATALLELECOUNT_BAFLOG_GCCORR
LSF_ARRAY_END_CONCATALLELECOUNT_BAFLOG_GCCORR=props.LSF_ARRAY_END_CONCATALLELECOUNT_BAFLOG_GCCORR
LSF_THREADS_CONCATALLELECOUNT_BAFLOG_GCCORR=props.LSF_THREADS_CONCATALLELECOUNT_BAFLOG_GCCORR

LSF_Q_IMPUTEFROMAF_IMPUTE_COMBINE=props.LSF_Q_IMPUTEFROMAF_IMPUTE_COMBINE
LSF_MEMORY_IMPUTEFROMAF_IMPUTE_COMBINE=props.LSF_MEMORY_IMPUTEFROMAF_IMPUTE_COMBINE
LSF_ARRAY_START_IMPUTEFROMAF_IMPUTE_COMBINE=props.LSF_ARRAY_START_IMPUTEFROMAF_IMPUTE_COMBINE
LSF_ARRAY_END_IMPUTEFROMAF_IMPUTE_COMBINE=CONTIGS
LSF_THREADS_IMPUTEFROMAF_IMPUTE_COMBINE=props.LSF_THREADS_IMPUTEFROMAF_IMPUTE_COMBINE

LSF_Q_HAPLOTYPEBAF_POSTBAFCLEAN_PLOTHAP=props.LSF_Q_HAPLOTYPEBAF_POSTBAFCLEAN_PLOTHAP
LSF_MEMORY_HAPLOTYPEBAF_POSTBAFCLEAN_PLOTHAP=props.LSF_MEMORY_HAPLOTYPEBAF_POSTBAFCLEAN_PLOTHAP
LSF_ARRAY_START_HAPLOTYPEBAF_POSTBAFCLEAN_PLOTHAP=props.LSF_ARRAY_START_HAPLOTYPEBAF_POSTBAFCLEAN_PLOTHAP
LSF_ARRAY_END_HAPLOTYPEBAF_POSTBAFCLEAN_PLOTHAP=CONTIGS
LSF_THREADS_HAPLOTYPEBAF_POSTBAFCLEAN_PLOTHAP=props.LSF_THREADS_HAPLOTYPEBAF_POSTBAFCLEAN_PLOTHAP

LSF_Q_PLOTHAPLOTYPES=props.LSF_Q_PLOTHAPLOTYPES
LSF_MEMORY_PLOTHAPLOTYPES=props.LSF_MEMORY_PLOTHAPLOTYPES
LSF_ARRAY_START_PLOTHAPLOTYPES=props.LSF_ARRAY_START_PLOTHAPLOTYPES
LSF_ARRAY_END_PLOTHAPLOTYPES=CONTIGS
LSF_THREADS_PLOTHAPLOTYPES=props.LSF_THREADS_PLOTHAPLOTYPES

LSF_Q_COMBINEBAFS_SEGPHASED=props.LSF_Q_COMBINEBAFS_SEGPHASED
LSF_MEMORY_COMBINEBAFS_SEGPHASED=props.LSF_MEMORY_COMBINEBAFS_SEGPHASED
LSF_ARRAY_START_COMBINEBAFS_SEGPHASED=props.LSF_ARRAY_START_COMBINEBAFS_SEGPHASED
LSF_ARRAY_END_COMBINEBAFS_SEGPHASED=props.LSF_ARRAY_END_COMBINEBAFS_SEGPHASED
LSF_THREADS_COMBINEBAFS_SEGPHASED=props.LSF_THREADS_COMBINEBAFS_SEGPHASED

LSF_Q_FITCN_SUBCLONES=props.LSF_Q_FITCN_SUBCLONES
LSF_MEMORY_FITCN_SUBCLONES=props.LSF_MEMORY_FITCN_SUBCLONES
LSF_ARRAY_START_FITCN_SUBCLONES=props.LSF_ARRAY_START_FITCN_SUBCLONES
LSF_ARRAY_END_FITCN_SUBCLONES=props.LSF_ARRAY_END_FITCN_SUBCLONES
LSF_THREADS_FITCN_SUBCLONES=props.LSF_THREADS_FITCN_SUBCLONES

LSF_Q_FINALISE=props.LSF_Q_FINALISE
LSF_MEMORY_FINALISE=props.LSF_MEMORY_FINALISE
LSF_ARRAY_START_FINALISE=props.LSF_ARRAY_START_FINALISE
LSF_ARRAY_END_FINALISE=props.LSF_ARRAY_END_FINALISE
LSF_THREADS_FINALISE=props.LSF_THREADS_FINALISE

LSF_Q_CN=props.LSF_Q_CN
LSF_MEMORY_CN=props.LSF_MEMORY_CN
LSF_ARRAY_START_CN=props.LSF_ARRAY_START_CN
LSF_ARRAY_END_CN=props.LSF_ARRAY_END_CN
LSF_THREADS_CN=props.LSF_THREADS_CN

config = new ConfigSlurper().parse(new File('cgp_resultloader.prm').toURL())
props = config.toProperties()

LSF_Q_RESULT=props.LSF_Q_RESULT
LSF_MEMORY_RESULT=props.LSF_MEMORY_RESULT
LSF_RESULT_ARRAY_START=props.LSF_RESULT_ARRAY_START
LSF_RESULT_ARRAY_END=props.LSF_RESULT_ARRAY_END
LSF_RESULT_JOB_NAME=props.LSF_RESULT_JOB_NAME
LSF_RESULT_THREADS=props.LSF_RESULT_THREADS
LSF_RESULT_PRIORITY=props.LSF_RESULT_PRIORITY
LSF_RESULT_NFS_TOKEN=props.LSF_RESULT_NFS_TOKEN

def JOBID = System.getenv('LSB_JOBID');

executor="lsf"
procs="$THREADS"

lsf_request_options=" -P analysis-cgp -q $LSF_Q -R'select[mem>$LSF_MEMORY] span[hosts=1] rusage[mem=$LSF_MEMORY]' -M$LSF_MEMORY -oo ${LSF_JOB_NAME}_default.%I.canPipe.log -J ${LSF_JOB_NAME}_default_${JOBID}'[$LSF_ARRAY_START-$LSF_ARRAY_END]'"
commands {

 lsf_SPLITLOCIFILES {
    procs="$LSF_THREADS_SPLITLOCIFILES"
    lsf_request_options=" -P analysis-cgp -q $LSF_Q_SPLITLOCIFILES -R'select[mem>$LSF_MEMORY_SPLITLOCIFILES] span[hosts=1] rusage[mem=$LSF_MEMORY_SPLITLOCIFILES]' -M$LSF_MEMORY_SPLITLOCIFILES -oo ${LSF_JOB_NAME}_SPLITLOCIFILES.%I.canPipe.log -J ${LSF_JOB_NAME}_SPLITLOCIFILES_${JOBID}'[$LSF_ARRAY_START_SPLITLOCIFILES-$LSF_ARRAY_END_SPLITLOCIFILES]'"
  }

	lsf_ALLELECOUNT {
		procs="$LSF_THREADS_ALLELECOUNT"
		lsf_request_options=" -P analysis-cgp -q $LSF_Q_ALLELECOUNT -R'select[mem>$LSF_MEMORY_ALLELECOUNT] span[hosts=1] rusage[mem=$LSF_MEMORY_ALLELECOUNT]' -M$LSF_MEMORY_ALLELECOUNT -oo ${LSF_JOB_NAME}_ALLELECOUNT.%I.canPipe.log -J ${LSF_JOB_NAME}_ALLELECOUNT_${JOBID}'[$LSF_ARRAY_START_ALLELECOUNT-$LSF_ARRAY_END_ALLELECOUNT]'"
	}

	lsf_CONCATALLELECOUNT_BAFLOG_GCCORR {
		procs="$LSF_THREADS_CONCATALLELECOUNT_BAFLOG_GCCORR"
		lsf_request_options=" -P analysis-cgp -q $LSF_Q_CONCATALLELECOUNT_BAFLOG_GCCORR -R'select[mem>$LSF_MEMORY_CONCATALLELECOUNT_BAFLOG_GCCORR] span[hosts=1] rusage[mem=$LSF_MEMORY_CONCATALLELECOUNT_BAFLOG_GCCORR]' -M$LSF_MEMORY_CONCATALLELECOUNT_BAFLOG_GCCORR -oo ${LSF_JOB_NAME}_CONCATALLELECOUNT_BAFLOG_GCCORR.%I.canPipe.log -J ${LSF_JOB_NAME}_CONCATALLELECOUNT_BAFLOG_GCCORR_${JOBID}'[$LSF_ARRAY_START_CONCATALLELECOUNT_BAFLOG_GCCORR-$LSF_ARRAY_END_CONCATALLELECOUNT_BAFLOG_GCCORR]'"
	}

	lsf_IMPUTEFROMAF_IMPUTE_COMBINE {
		procs="$LSF_THREADS_IMPUTEFROMAF_IMPUTE_COMBINE"
		lsf_request_options=" -P analysis-cgp -q $LSF_Q_IMPUTEFROMAF_IMPUTE_COMBINE -R'select[mem>$LSF_MEMORY_IMPUTEFROMAF_IMPUTE_COMBINE] span[hosts=1] rusage[mem=$LSF_MEMORY_IMPUTEFROMAF_IMPUTE_COMBINE]' -M$LSF_MEMORY_IMPUTEFROMAF_IMPUTE_COMBINE -oo ${LSF_JOB_NAME}_IMPUTEFROMAF_IMPUTE_COMBINE.%I.canPipe.log -J ${LSF_JOB_NAME}_IMPUTEFROMAF_IMPUTE_COMBINE_${JOBID}'[$LSF_ARRAY_START_IMPUTEFROMAF_IMPUTE_COMBINE-$LSF_ARRAY_END_IMPUTEFROMAF_IMPUTE_COMBINE]'"
	}

	lsf_HAPLOTYPEBAF_POSTBAFCLEAN_PLOTHAP {
		procs="$LSF_THREADS_HAPLOTYPEBAF_POSTBAFCLEAN_PLOTHAP"
		lsf_request_options=" -P analysis-cgp -q $LSF_Q_HAPLOTYPEBAF_POSTBAFCLEAN_PLOTHAP -R'select[mem>$LSF_MEMORY_HAPLOTYPEBAF_POSTBAFCLEAN_PLOTHAP] span[hosts=1] rusage[mem=$LSF_MEMORY_HAPLOTYPEBAF_POSTBAFCLEAN_PLOTHAP]' -M$LSF_MEMORY_HAPLOTYPEBAF_POSTBAFCLEAN_PLOTHAP -oo ${LSF_JOB_NAME}_HAPLOTYPEBAF_POSTBAFCLEAN_PLOTHAP.%I.canPipe.log -J ${LSF_JOB_NAME}_HAPLOTYPEBAF_POSTBAFCLEAN_PLOTHAP_${JOBID}'[$LSF_ARRAY_START_HAPLOTYPEBAF_POSTBAFCLEAN_PLOTHAP-$LSF_ARRAY_END_HAPLOTYPEBAF_POSTBAFCLEAN_PLOTHAP]'"
	}

	lsf_COMBINEBAFS_SEGPHASED {
		procs="$LSF_THREADS_COMBINEBAFS_SEGPHASED"
		lsf_request_options=" -P analysis-cgp -q $LSF_Q_COMBINEBAFS_SEGPHASED -R'select[mem>$LSF_MEMORY_COMBINEBAFS_SEGPHASED] span[hosts=1] rusage[mem=$LSF_MEMORY_COMBINEBAFS_SEGPHASED]' -M$LSF_MEMORY_COMBINEBAFS_SEGPHASED -oo ${LSF_JOB_NAME}_COMBINEBAFS_SEGPHASED.%I.canPipe.log -J ${LSF_JOB_NAME}_COMBINEBAFS_SEGPHASED_${JOBID}'[$LSF_ARRAY_START_COMBINEBAFS_SEGPHASED-$LSF_ARRAY_END_COMBINEBAFS_SEGPHASED]'"
	}

	lsf_FITCN_SUBCLONES {
		procs="$LSF_THREADS_FITCN_SUBCLONES"
		lsf_request_options=" -sp 54 -P analysis-cgp -q $LSF_Q_FITCN_SUBCLONES -R'select[mem>$LSF_MEMORY_FITCN_SUBCLONES] span[hosts=1] rusage[mem=$LSF_MEMORY_FITCN_SUBCLONES]' -M$LSF_MEMORY_FITCN_SUBCLONES -oo ${LSF_JOB_NAME}_FITCN_SUBCLONES.%I.canPipe.log -J ${LSF_JOB_NAME}_FITCN_SUBCLONES_${JOBID}'[$LSF_ARRAY_START_FITCN_SUBCLONES-$LSF_ARRAY_END_FITCN_SUBCLONES]'"
	}

	lsf_FINALISE {
		procs="$LSF_THREADS_FINALISE"
		lsf_request_options=" -sp 54 -P analysis-cgp -q $LSF_Q_FINALISE -R'select[mem>$LSF_MEMORY_FINALISE] span[hosts=1] rusage[mem=$LSF_MEMORY_FINALISE]' -M$LSF_MEMORY_FINALISE -oo ${LSF_JOB_NAME}_FINALISE.%I.canPipe.log -J ${LSF_JOB_NAME}_FINALISE_${JOBID}'[$LSF_ARRAY_START_FINALISE-$LSF_ARRAY_END_FINALISE]'"
	}
  lsf_CN {
    procs="$LSF_THREADS_CN"
		lsf_request_options=" -P analysis-cgp -q $LSF_Q_CN -R'select[mem>$LSF_MEMORY_CN] span[hosts=1] rusage[mem=$LSF_MEMORY_CN]' -M$LSF_MEMORY_CN -oo ${LSF_JOB_NAME}_CN.%I.canPipe.log -J ${LSF_JOB_NAME}_CN_${JOBID}'[$LSF_ARRAY_START_CN-$LSF_ARRAY_END_CN]'"
  }
	lsf_loadresults {
    procs="$LSF_RESULT_THREADS"
		lsf_request_options="  -P analysis-cgp -q $LSF_Q_RESULT -sp $LSF_RESULT_PRIORITY -R'select[casm_cgpirods>=$LSF_RESULT_NFS_TOKEN && mem>$LSF_MEMORY_RESULT] order[!slots] span[hosts=1] rusage[casm_cgpirods=$LSF_RESULT_NFS_TOKEN]' -R'rusage[mem=$LSF_MEMORY_RESULT]' -M$LSF_MEMORY_RESULT -oo resultloader.%I.canPipe.log -J ${LSF_RESULT_JOB_NAME}_RESULT_${JOBID}'[$LSF_RESULT_ARRAY_START-$LSF_RESULT_ARRAY_END]'"
	}
	lsf_TOUCH {
		procs="$LSF_THREADS_TOUCH"
		lsf_request_options="  -P analysis-cgp -q $LSF_Q_TOUCH -R'select[mem>$LSF_MEMORY_TOUCH] span[hosts=1] rusage[mem=$LSF_MEMORY_TOUCH]' -M$LSF_MEMORY_TOUCH -oo ${LSF_JOB_NAME}_TOUCH.%I.canPipe.log -J ${LSF_JOB_NAME}_TOUCH_${JOBID}'[$LSF_ARRAY_START_TOUCH-$LSF_ARRAY_END_TOUCH]'"
	}
}
