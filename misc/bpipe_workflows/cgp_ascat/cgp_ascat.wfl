load 'cgp_ascat.prm'

about title: "CGP ascat implementation bpipe workflow"

def sing_ascat = "singularity exec --cleanenv --no-home --workdir $OUTDIR --pwd $OUTDIR --home $OUTDIR --bind $SCRATCH_ROOT:$SCRATCH_ROOT $SIF_ASCATNGS "
def tumour_counts = "$TUM_STAGE/${TUMOUR_ID}.ascat.counts.gz"
def normal_counts = "$NORM_STAGE/${NORMAL_ID}.ascat.counts.gz"
def is_male_file = "$NORM_STAGE/${NORMAL_ID}.ascat.counts.is_male.txt"
def ascat_pl = "ascat.pl -pl $SEQ_PLATFORM -o $OUTDIR -t $tumour_counts -n $normal_counts -r $REFERENCE -sg $SNP_GC -g $is_male_file  -pr $NORMAL_PROTOCOL -tn $TUMOUR_NAME -nn $NORMAL_NAME -rs $SPECIES -ra $SPECIES_ASSEMBLY"

ascat_allele_count = {
  doc title: "allele_count - Ascat NGS - allele_count",
      desc:  "Allele count step for ascat.pl",
      constraints: "N/A",
      author: "cgpit@sanger.ac.uk"
  if("$USER_DEC" != "accept" && "$USER_DEC" != "rerun"){
    exec """
        export SINGULARITYENV_PCAP_THREADED_REM_LOGS=1
        && $sing_ascat bash -c '$ascat_pl -p allele_count -i 1 && $ascat_pl -p allele_count -i 2'
        && date >$output.track
      """, """lsf_ALLELE_COUNT"""
  }
}

ascat_ascat = {
  doc title: "acsat - Ascat NGS - ascat",
      desc:  "Ascat step for ascat.pl",
      constraints: "Requires allele count step to have been run",
      author: "cgpit@sanger.ac.uk"
    if("$USER_DEC" != "accept"){ //Requires rerun or run
      if("$PURITY" != ""){
        exec """
          rm --force $OUTDIR/tmpAscat/progress/Sanger_CGP_Ascat_Implement_ascat.0 $OUTDIR/tmpAscat/progress/Sanger_CGP_Ascat_Implement_finalise.0
          && export SINGULARITYENV_PCAP_THREADED_REM_LOGS=1
          && $sing_ascat $ascat_pl -p ascat -i 1 -pu $PURITY -pi $PLOIDY -f
          && date >$output.track
        """, """lsf_ASCAT_RERUN"""
      }else{
        exec """
            perl -e 'if(-e "$OUTDIR/tmpAscat/progress/Sanger_CGP_Ascat_Implement_ascat.0"){unlink ("$OUTDIR/tmpAscat/progress/Sanger_CGP_Ascat_Implement_ascat.0","$OUTDIR/tmpAscat/progress/Sanger_CGP_Ascat_Implement_finalise.0")}'
            && export SINGULARITYENV_PCAP_THREADED_REM_LOGS=1
            && $sing_ascat $ascat_pl -p ascat -i 1 -f
            && date >$output.track
          """, """lsf_ASCAT"""
      }
    }else{
      exec """
            echo "Accepted ascat result, no work to do." && date >$output.track """, """lsf_ASCAT_NOWORK"""
    }
}

ascat_finalise = {
  doc title: "finalise - Ascat NGS - finalise",
      desc:  "Finalise step for ascat.pl",
      constraints: "Requires ascat step to have been run",
      author: "cgpit@sanger.ac.uk"
  if("$USER_DEC" == "accept"){
    exec """
      export SINGULARITYENV_PCAP_THREADED_REM_LOGS=1
      && $sing_ascat $ascat_pl -p finalise -i 1 -f
      && perl -ne '@F=(split q{,}, $_)[1,2,3,4]; $F[1]-1; print join("\\t",@F)."\\n";' < $OUTDIR/*.copynumber.caveman.csv > $OUTDIR/norm.cn.bed
      && perl -ne '@F=(split q{,}, $_)[1,2,3,6]; $F[1]-1; print join("\\t",@F)."\\n";' < $OUTDIR/*.copynumber.caveman.csv > $OUTDIR/tum.cn.bed
      && date >$output.track
    """, """lsf_FINALISE"""
  }else{
    exec """
      export SINGULARITYENV_PCAP_THREADED_REM_LOGS=1
      && $sing_ascat bash -c ' $ascat_pl -p finalise -i 1 -nc -f && ascat.pl -version > ascatngs.version'
      && date >$output.track
    """, """lsf_FINALISE"""
  }
}
