//read config file
def config = new ConfigSlurper().parse(new File('cgp_pindel.prm').toURL())
props = config.toProperties()

REFERENCE=props.REFERENCE

// prefix for used in lsf_request_options
LSF_JOB_NAME=props.LSF_JOB_NAME


LSF_Q_PINDEL=props.LSF_Q_PINDEL
LSF_MEMORY_PINDEL=props.LSF_MEMORY_PINDEL
LSF_THREADS_PINDEL=props.LSF_THREADS_PINDEL

LSF_Q_PINDEL_PREUPLOAD=props.LSF_Q_PINDEL_PREUPLOAD
LSF_MEMORY_PINDEL_PREUPLOAD=props.LSF_MEMORY_PINDEL_PREUPLOAD
LSF_THREADS_PINDEL_PREUPLOAD=props.LSF_THREADS_PINDEL_PREUPLOAD

// bigwig config
def config_bigwig = new ConfigSlurper().parse(new File('cgp_bigwig.prm').toURL())
props = config_bigwig.toProperties()

LSF_THREADS_BAM_TO_BW=props.LSF_THREADS_BAM_TO_BW
LSF_Q_BAM_TO_BW=props.LSF_Q_BAM_TO_BW
LSF_MEMORY_BAM_TO_BW=props.LSF_MEMORY_BAM_TO_BW
LSF_ARRAY_START_BAM_TO_BW=props.LSF_ARRAY_START_BAM_TO_BW
LSF_ARRAY_END_BAM_TO_BW=props.LSF_ARRAY_END_BAM_TO_BW

LSF_Q_MERGE_BW=props.LSF_Q_MERGE_BW
LSF_MEMORY_MERGE_BW=props.LSF_MEMORY_MERGE_BW

LSF_Q_GEN_BW=props.LSF_Q_GEN_BW
LSF_MEMORY_GEN_BW=props.LSF_MEMORY_GEN_BW

LSF_Q_RENAME_BW=props.LSF_Q_RENAME_BW
LSF_MEMORY_RENAME_BW=props.LSF_MEMORY_RENAME_BW

// VAF config
def config_vaf = new ConfigSlurper().parse(new File('cgp_vaf.prm').toURL())
props = config_vaf.toProperties()

LSF_Q_VAF=props.LSF_Q_VAF
LSF_MEMORY_VAF=props.LSF_MEMORY_VAF
LSF_ARRAY_START_VAF=props.LSF_ARRAY_START_VAF
LSF_ARRAY_END_VAF=props.LSF_ARRAY_END_VAF
LSF_THREADS_VAF=props.LSF_THREADS_VAF

config = new ConfigSlurper().parse(new File('cgp_resultloader.prm').toURL())
props = config.toProperties()

LSF_Q_RESULT=props.LSF_Q_RESULT
LSF_MEMORY_RESULT=props.LSF_MEMORY_RESULT
LSF_RESULT_ARRAY_START=props.LSF_RESULT_ARRAY_START
LSF_RESULT_ARRAY_END=props.LSF_RESULT_ARRAY_END
LSF_RESULT_JOB_NAME=props.LSF_RESULT_JOB_NAME
LSF_RESULT_THREADS=props.LSF_RESULT_THREADS
LSF_RESULT_PRIORITY=props.LSF_RESULT_PRIORITY
LSF_RESULT_NFS_TOKEN=props.LSF_RESULT_NFS_TOKEN

def JOBID = System.getenv('LSB_JOBID');

executor="lsf"

procs="1"

commands {
    lsf_PINDEL {
        procs="$LSF_THREADS_PINDEL"
        lsf_request_options="  -P analysis-cgp -q $LSF_Q_PINDEL -R'select[mem>$LSF_MEMORY_PINDEL] span[hosts=1] rusage[mem=$LSF_MEMORY_PINDEL]' -M$LSF_MEMORY_PINDEL -oo ${LSF_JOB_NAME}_PINDEL.%I.canPipe.log -J ${LSF_JOB_NAME}_PINDEL_${JOBID}'[1]'"
    }

    lsf_VAF {
        procs="$LSF_THREADS_VAF"
        lsf_request_options=" -P analysis-cgp -q $LSF_Q_VAF -R'select[mem>$LSF_MEMORY_VAF] span[hosts=1] rusage[mem=$LSF_MEMORY_VAF]' -M$LSF_MEMORY_VAF -oo ${LSF_JOB_NAME}_VAF.%I.canPipe.log -J ${LSF_JOB_NAME}_VAF_${JOBID}'[$LSF_ARRAY_START_VAF-$LSF_ARRAY_END_VAF]'"
    }

    lsf_BAM_TO_BW_TM {
        procs="$LSF_THREADS_BAM_TO_BW"
        lsf_request_options="  -P analysis-cgp -q $LSF_Q_BAM_TO_BW -R'select[mem>$LSF_MEMORY_BAM_TO_BW] span[hosts=1] rusage[mem=$LSF_MEMORY_BAM_TO_BW]' -M$LSF_MEMORY_BAM_TO_BW -oo ${LSF_JOB_NAME}_BAM_TO_BW_TM.%I.canPipe.log -J ${LSF_JOB_NAME}_BAM_TO_BW_${JOBID}'[$LSF_ARRAY_START_BAM_TO_BW-$LSF_ARRAY_END_BAM_TO_BW]'"
    }

    lsf_MERGE_BW_TM {
        lsf_request_options="  -P analysis-cgp -q $LSF_Q_MERGE_BW -R'select[mem>$LSF_MEMORY_MERGE_BW] span[hosts=1] rusage[mem=$LSF_MEMORY_MERGE_BW]' -M$LSF_MEMORY_MERGE_BW -oo ${LSF_JOB_NAME}_MERGE_BW_TM.%I.canPipe.log -J ${LSF_JOB_NAME}_MERGE_BW_${JOBID}'[1]'"
    }

    lsf_GEN_BW_TM {
        lsf_request_options="  -P analysis-cgp -q $LSF_Q_GEN_BW -R'select[mem>$LSF_MEMORY_GEN_BW] span[hosts=1] rusage[mem=$LSF_MEMORY_GEN_BW]' -M$LSF_MEMORY_GEN_BW -oo ${LSF_JOB_NAME}_GEN_BW_TM.%I.canPipe.log -J ${LSF_JOB_NAME}_GEN_BW_${JOBID}'[1]'"
    }

    lsf_RENAME_BW_TM {
        lsf_request_options="  -P analysis-cgp -q $LSF_Q_RENAME_BW -R'select[mem>$LSF_MEMORY_RENAME_BW] span[hosts=1] rusage[mem=$LSF_MEMORY_RENAME_BW]' -M$LSF_MEMORY_RENAME_BW -oo ${LSF_JOB_NAME}_RENAME_BW_TM.%I.canPipe.log -J ${LSF_JOB_NAME}_RENAME_BW_${JOBID}'[1]'"
    }

    lsf_BAM_TO_BW_NM {
        procs="$LSF_THREADS_BAM_TO_BW"
        lsf_request_options="  -P analysis-cgp -q $LSF_Q_BAM_TO_BW -R'select[mem>$LSF_MEMORY_BAM_TO_BW] span[hosts=1] rusage[mem=$LSF_MEMORY_BAM_TO_BW]' -M$LSF_MEMORY_BAM_TO_BW -oo ${LSF_JOB_NAME}_BAM_TO_BW_NM.%I.canPipe.log -J ${LSF_JOB_NAME}_BAM_TO_BW_${JOBID}'[$LSF_ARRAY_START_BAM_TO_BW-$LSF_ARRAY_END_BAM_TO_BW]'"
    }

    lsf_MERGE_BW_NM {
        lsf_request_options="  -P analysis-cgp -q $LSF_Q_MERGE_BW -R'select[mem>$LSF_MEMORY_MERGE_BW] span[hosts=1] rusage[mem=$LSF_MEMORY_MERGE_BW]' -M$LSF_MEMORY_MERGE_BW -oo ${LSF_JOB_NAME}_MERGE_BW_NM.%I.canPipe.log -J ${LSF_JOB_NAME}_MERGE_BW_${JOBID}'[1]'"
    }

    lsf_GEN_BW_NM {
        lsf_request_options="  -P analysis-cgp -q $LSF_Q_GEN_BW -R'select[mem>$LSF_MEMORY_GEN_BW] span[hosts=1] rusage[mem=$LSF_MEMORY_GEN_BW]' -M$LSF_MEMORY_GEN_BW -oo ${LSF_JOB_NAME}_GEN_BW_NM.%I.canPipe.log -J ${LSF_JOB_NAME}_GEN_BW_${JOBID}'[1]'"
    }

    lsf_RENAME_BW_NM {
        lsf_request_options="  -P analysis-cgp -q $LSF_Q_RENAME_BW -R'select[mem>$LSF_MEMORY_RENAME_BW] span[hosts=1] rusage[mem=$LSF_MEMORY_RENAME_BW]' -M$LSF_MEMORY_RENAME_BW -oo ${LSF_JOB_NAME}_RENAME_BW_NM.%I.canPipe.log -J ${LSF_JOB_NAME}_RENAME_BW_${JOBID}'[1]'"
    }

    lsf_RENAME_VCF {
        lsf_request_options="  -P analysis-cgp -q $LSF_Q_RENAME_BW -R'select[mem>$LSF_MEMORY_RENAME_BW] span[hosts=1] rusage[mem=$LSF_MEMORY_RENAME_BW]' -M$LSF_MEMORY_RENAME_BW -oo ${LSF_JOB_NAME}_RENAME_VCF.%I.canPipe.log -J ${LSF_JOB_NAME}_RENAME_VCF_${JOBID}'[1]'"
    }

    lsf_PINDEL_PREUPLOAD {
        lsf_request_options="  -P analysis-cgp -q $LSF_Q_PINDEL_PREUPLOAD -R'select[mem>$LSF_MEMORY_PINDEL_PREUPLOAD] span[hosts=1] rusage[mem=$LSF_MEMORY_PINDEL_PREUPLOAD]' -M$LSF_MEMORY_PINDEL_PREUPLOAD -oo ${LSF_JOB_NAME}_PINDEL_PREUPLOAD.%I.canPipe.log -J ${LSF_JOB_NAME}_PINDEL_PREUPLOAD_${JOBID}'[1]'"
    }

    lsf_loadresults {
        procs="$LSF_RESULT_THREADS"
        lsf_request_options="  -P analysis-cgp -q $LSF_Q_RESULT -sp $LSF_RESULT_PRIORITY -R'select[casm_cgpirods>=$LSF_RESULT_NFS_TOKEN && mem>$LSF_MEMORY_RESULT] order[!slots] span[hosts=1] rusage[casm_cgpirods=$LSF_RESULT_NFS_TOKEN]' -R'rusage[mem=$LSF_MEMORY_RESULT]' -M$LSF_MEMORY_RESULT -oo resultloader.%I.canPipe.log -J ${LSF_RESULT_JOB_NAME}_RESULT_${JOBID}'[$LSF_RESULT_ARRAY_START-$LSF_RESULT_ARRAY_END]'"
    }
}
