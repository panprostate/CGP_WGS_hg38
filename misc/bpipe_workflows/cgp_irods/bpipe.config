def config = new ConfigSlurper().parse(new File('cgp_irods.prm').toURL())
props = config.toProperties()

LSF_Q_IRODS=props.LSF_Q_IRODS
LSF_MEMORY_IRODS=props.LSF_MEMORY_IRODS
LSF_ARRAY_END_IRODS=props.LSF_ARRAY_END_IRODS
LSF_ARRAY_START_IRODS=props.LSF_ARRAY_START_IRODS

LSF_IRODS_TOKEN=props.LSF_IRODS_TOKEN
LSF_THREADS_IRODS=props.LSF_THREADS_IRODS

LSF_JOB_NAME=props.LSF_JOB_NAME

def JOBID = System.getenv('LSB_JOBID');

executor="lsf"

lsf_request_options=" -P analysis-cgp  -q normal -R'select[mem>500] span[hosts=1] rusage[mem=500]' -M500 -oo irods_default.%I.canPipe.log -J irods_default_${JOBID}'[1]'"

commands {
  lsf_IRODS {
    procs="$LSF_THREADS_IRODS"
    lsf_request_options=" -P analysis-cgp  -q $LSF_Q_IRODS -R'select[casm_seqirods>=$LSF_IRODS_TOKEN] rusage[casm_seqirods=$LSF_IRODS_TOKEN]' -R'select[mem>$LSF_MEMORY_IRODS] span[hosts=1] rusage[mem=$LSF_MEMORY_IRODS]' -M$LSF_MEMORY_IRODS -oo lsf_IRODS_irods.%I.canPipe.log -J ${LSF_JOB_NAME}_IRODS_${JOBID}'[$LSF_ARRAY_START_IRODS-$LSF_ARRAY_END_IRODS]'"
  }
}

