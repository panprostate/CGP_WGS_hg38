//read config file

def config = new ConfigSlurper().parse(new File('cgp_splot.prm').toURL())
props = config.toProperties()

LSF_Q=props.LSF_Q
LSF_MEMORY=props.LSF_MEMORY
LSF_ARRAY_START=props.LSF_ARRAY_START
LSF_ARRAY_END=props.LSF_ARRAY_END

LSF_Q_SPLOT=props.LSF_Q_SPLOT
LSF_MEMORY_SPLOT=props.LSF_MEMORY_SPLOT
LSF_ARRAY_START_SPLOT=props.LSF_ARRAY_START_SPLOT
LSF_ARRAY_END_SPLOT=props.LSF_ARRAY_END_SPLOT
LSF_THREADS_SPLOT=props.LSF_THREADS_SPLOT

LSF_JOB_NAME=props.LSF_JOB_NAME
THREADS=props.THREADS

def JOBID = System.getenv('LSB_JOBID');

executor="lsf"
procs="1"

lsf_request_options=" -P analysis-cgp  -q $LSF_Q -R'select[mem>$LSF_MEMORY] span[hosts=1] rusage[mem=$LSF_MEMORY]' -M$LSF_MEMORY -oo bp_${LSF_JOB_NAME}_default.%I.canPipe.log -J ${LSF_JOB_NAME}_default_${JOBID}'[$LSF_ARRAY_START-$LSF_ARRAY_END]'"

commands {
	lsf_SPLOT {
		procs="$LSF_THREADS_SPLOT"
		lsf_request_options=" -P analysis-cgp -q $LSF_Q_SPLOT -R'select[mem>$LSF_MEMORY_SPLOT] span[hosts=1] rusage[mem=$LSF_MEMORY_SPLOT]' -M$LSF_MEMORY_SPLOT -oo ${LSF_JOB_NAME}_splot.%I.canPipe.log -J ${LSF_JOB_NAME}_SPLOT_${JOBID}'[$LSF_ARRAY_START_SPLOT-$LSF_ARRAY_END_SPLOT]'"
	}
}
