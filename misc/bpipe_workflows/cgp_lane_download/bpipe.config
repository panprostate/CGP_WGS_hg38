//load irods prm file
def config = new ConfigSlurper().parse(new File('cgp_irods.prm').toURL())
props = config.toProperties()

LSF_JOB_NAME_IRODS=props.LSF_JOB_NAME
LSF_Q_IRODS=props.LSF_Q_IRODS
LSF_MEMORY_IRODS=props.LSF_MEMORY_IRODS
LSF_ARRAY_END_IRODS=props.LSF_ARRAY_END_IRODS
LSF_ARRAY_START_IRODS=props.LSF_ARRAY_START_IRODS
LSF_IRODS_TOKEN=props.LSF_IRODS_TOKEN
LSF_THREADS_IRODS=props.LSF_THREADS_IRODS
LSF_IRODS_PRIORITY=props.LSF_IRODS_PRIORITY


def JOBID = System.getenv('LSB_JOBID');

executor="lsf"

//default LSF values
lsf_request_options=" -P default_settings -q $LSF_Q -R'select[mem>$LSF_MEMORY]  span[hosts=1] rusage[mem=$LSF_MEMORY]' -M$LSF_MEMORY -oo ${LSF_JOB_NAME}_default.%I.canPipe.log -J ${LSF_JOB_NAME}_default_${JOBID}'[$LSF_ARRAY_START-$LSF_ARRAY_END]'"

commands {

	lsf_IRODS {
		procs="$LSF_THREADS_IRODS"
		lsf_request_options=" -P analysis-cgp -sp $LSF_IRODS_PRIORITY -q $LSF_Q_IRODS -R'select[casm_seqirods>=$LSF_IRODS_TOKEN] order[!slots] span[hosts=1] rusage[casm_seqirods=$LSF_IRODS_TOKEN]' -R'select[mem>$LSF_MEMORY_IRODS] rusage[mem=$LSF_MEMORY_IRODS]' -M$LSF_MEMORY_IRODS -oo ${LSF_JOB_NAME_IRODS}_irods.%I.canPipe.log -J ${LSF_JOB_NAME_IRODS}_IRODS_${JOBID}'[$LSF_ARRAY_START_IRODS-$LSF_ARRAY_END_IRODS]'"
	}

}
